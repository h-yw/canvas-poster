{"version":3,"file":"create-poster.umd.js","sources":["../lib/index.ts"],"sourcesContent":["/**\r\n * @name CanvasPoster\r\n * @desc canvas poster，easy to create poster and export picture\r\n * @desc 创建canvas海报,便于快速生成海报并导出图片\r\n * @author Mr.Hou\r\n * @time 2021/11/18\r\n */\r\nimport { PosterConfig, TextConfig, ImageConfig } from \"./type\";\r\nclass CanvasPoster {\r\n  private _canvas: HTMLCanvasElement;\r\n  private _ctx: CanvasRenderingContext2D;\r\n  private _config: PosterConfig;\r\n  constructor(canvas: HTMLCanvasElement, config: PosterConfig | undefined) {\r\n    this._canvas = canvas;\r\n    this._config = config;\r\n    this._ctx = this._canvas.getContext(\"2d\");\r\n    // 设置canvas\r\n    this._setCanvas();\r\n  }\r\n  /**\r\n   * @description 设置canvas参数\r\n   * @return\r\n   */\r\n  private _setCanvas(): void {\r\n    if (this._config) {\r\n      this._canvas.width = this._config.width;\r\n      this._canvas.height = this._config.height;\r\n    }\r\n    this._ctx.font = \"24px sans-serif\";\r\n    this._ctx.fillStyle = \"#000\";\r\n    this._ctx.textAlign = \"center\";\r\n    this._ctx.textBaseline = \"middle\";\r\n  }\r\n\r\n  /**\r\n   * @description 绘制\r\n   * @param {Array[ImageConfig|TextConfig]} data\r\n   * @returns\r\n   */\r\n  public async draw(data: Array<any>): Promise<void> {\r\n    let len = data.length;\r\n    for (let i = 0; i < len; i++) {\r\n      if (data[i].type === \"text\") {\r\n        this.drawText(data[i]);\r\n        console.log(i);\r\n\r\n        // continue\r\n      }\r\n      if (data[i].type === \"image\") {\r\n        if (data[i].image instanceof Image) {\r\n          this.drawImage(data[i]);\r\n          console.log(i);\r\n\r\n          // continue\r\n        }\r\n        if (typeof data[i].image === \"string\") {\r\n          let img = await this.createImage(data[i].image);\r\n          data[i].image = img;\r\n          // console.log(res);\r\n          this.drawImage(data[i]);\r\n          console.log(i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description 绘制文字\r\n   * @param {TextConfig} params\r\n   * @returns\r\n   */\r\n  public async drawText(params: TextConfig): Promise<number> {\r\n    return new Promise((resolve, reject) => {\r\n      if (params.font) {\r\n        this._ctx.font = params.font;\r\n      }\r\n      if (params.color) {\r\n        this._ctx.fillStyle = params.color;\r\n      }\r\n      if (params.textAlign) {\r\n        this._ctx.textAlign = params.textAlign;\r\n      }\r\n      if (!params.maxWidth) {\r\n        this._ctx.fillText(params.text, params.x, params.y);\r\n        return;\r\n      }\r\n      let MAX_WIDTH = params.maxWidth || 200;\r\n      let totalLine = params.totalLine || 1;\r\n      let lineHeight = params.lineHeight || 24;\r\n      let startX = params.x || 0;\r\n      let startY = params.y || 0;\r\n      let allAtr = params.text.split(\"\");\r\n      let rowArr = []; // 拆分出来的每一行\r\n      let rowStrArr = []; // 每一行的文字数组\r\n      for (let i = 0; i < allAtr.length; i++) {\r\n        const currentStr = allAtr[i];\r\n        rowStrArr.push(currentStr);\r\n        const rowStr = rowStrArr.join(\"\");\r\n        if (this._ctx.measureText(rowStr).width > MAX_WIDTH) {\r\n          rowStrArr.pop(); // 删除最后一个\r\n          rowArr.push(rowStrArr.join(\"\")); // 完成一行\r\n          rowStrArr = [currentStr];\r\n          continue;\r\n        }\r\n        // 最后一个字母 直接添加到一行\r\n        if (i === allAtr.length - 1) {\r\n          rowArr.push(rowStr); // 完成一行\r\n        }\r\n      }\r\n      let line = rowArr.length > totalLine ? totalLine : rowArr.length;\r\n      for (let i = 0; i < line; i++) {\r\n        // console.log(rowArr[i], i, line);\r\n        if (i + 1 === line && line !== 1) {\r\n          rowArr[i] = rowArr[i] + \"...\";\r\n        }\r\n        this._ctx.fillText(rowArr[i], startX, startY + i * lineHeight);\r\n      }\r\n      resolve(rowArr.length);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description 绘制图片\r\n   * @param {ImageConfig} params\r\n   * @returns\r\n   */\r\n  public async drawImage(params: ImageConfig): Promise<void> {\r\n    return new Promise((resolve, reject) => {\r\n      if (params.borderRadius !== undefined) {\r\n        this.creatBorderRect(\r\n          params.x,\r\n          params.y,\r\n          params.width,\r\n          params.height,\r\n          params.borderRadius,\r\n        );\r\n        // this.restore()\r\n      }\r\n      // console.log('drawImage: params', params);\r\n\r\n      if (\r\n        params.dx == undefined ||\r\n        params.dy == undefined ||\r\n        params.dWidth == undefined ||\r\n        params.dHeight == undefined\r\n      ) {\r\n        this._ctx.drawImage(\r\n          params.image,\r\n          params.x,\r\n          params.y,\r\n          params.width,\r\n          params.height,\r\n        );\r\n      } else {\r\n        this._ctx.drawImage(\r\n          params.image,\r\n          params.dx,\r\n          params.dy,\r\n          params.dWidth,\r\n          params.dHeight,\r\n          params.x,\r\n          params.y,\r\n          params.width,\r\n          params.height,\r\n        );\r\n      }\r\n      this.restore();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @description 创建图片\r\n   * @param {string} url\r\n   * @returns {Promise<HTMLImageElement|unknown>}\r\n   */\r\n  public createImage(src: string): Promise<HTMLImageElement | unknown> {\r\n    if (!Image) {\r\n      console.log(\"不支持new Image(),传入CanvasImageSource\");\r\n      return;\r\n    }\r\n    let img = new Image();\r\n    img.src = src;\r\n    img.referrerPolicy = \"no-referrer\";\r\n    let imgPo = new Promise((resolve, reject) => {\r\n      img.onload = function () {\r\n        resolve(img);\r\n      };\r\n      img.onerror = function (e) {\r\n        reject(e);\r\n      };\r\n    });\r\n    return imgPo;\r\n  }\r\n\r\n  /**\r\n   * @description 创建圆角矩形\r\n   * @param {number} x x坐标\r\n   * @param {number} y y坐标\r\n   * @param {number} width 宽度\r\n   * @param {number} height 高度\r\n   * @param {number} radius 圆角半径\r\n   * @returns\r\n   */\r\n  public creatBorderRect(\r\n    x: number,\r\n    y: number,\r\n    w: any,\r\n    h: any,\r\n    r: number,\r\n    color?: string | CanvasGradient | CanvasPattern,\r\n  ) {\r\n    this._ctx.beginPath();\r\n    // 左上角\r\n    this._ctx.arc(x + r, y + r, r, Math.PI, 1.5 * Math.PI);\r\n    this._ctx.moveTo(x + r, y);\r\n    this._ctx.lineTo(x + w - r, y);\r\n    this._ctx.lineTo(x + w, y + r);\r\n    // 右上角\r\n    this._ctx.arc(x + w - r, y + r, r, 1.5 * Math.PI, 2 * Math.PI);\r\n    this._ctx.lineTo(x + w, y + h - r);\r\n    this._ctx.lineTo(x + w - r, y + h);\r\n    // 右下角\r\n    this._ctx.arc(x + w - r, y + h - r, r, 0, 0.5 * Math.PI);\r\n    this._ctx.lineTo(x + r, y + h);\r\n    this._ctx.lineTo(x, y + h - r);\r\n    // 左下角\r\n    this._ctx.arc(x + r, y + h - r, r, 0.5 * Math.PI, Math.PI);\r\n    this._ctx.lineTo(x, y + r);\r\n    this._ctx.lineTo(x + r, y);\r\n\r\n    this._ctx.fillStyle = color || \"#5a5a5a\";\r\n    this._ctx.fill();\r\n    this._ctx.closePath();\r\n    this._ctx.save();\r\n    this._ctx.clip();\r\n  }\r\n\r\n  /**\r\n   * @description 恢复clip区域限制\r\n   * @returns\r\n   */\r\n  public restore() {\r\n    this._ctx.restore();\r\n  }\r\n  /**\r\n   *\r\n   * @param type 图片类型\r\n   * @param quality 图片质量(0-1)\r\n   * @returns String\r\n   */\r\n  public canvas2Image(type: string, quality: number) {\r\n    let canvasImg = this._canvas.toDataURL(\"image/png\", 1);\r\n    return canvasImg;\r\n  }\r\n\r\n  /**\r\n   * @description 获取canvas\r\n   * @returns {HTMLCanvasElement}\r\n   */\r\n  public getCanvas(): HTMLCanvasElement {\r\n    return this._canvas;\r\n  }\r\n  /**\r\n   * @description 获取canvas的上下文\r\n   * @returns {RenderingContext}\r\n   */\r\n  public getCtx(): RenderingContext {\r\n    return this._ctx;\r\n  }\r\n}\r\n\r\nexport default CanvasPoster;\r\n"],"names":[],"mappings":"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"}