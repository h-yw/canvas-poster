var I=Object.defineProperty;var T=(l,s,t)=>s in l?I(l,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[s]=t;var _=(l,s,t)=>(T(l,typeof s!="symbol"?s+"":s,t),t);(function(l,s){typeof exports=="object"&&typeof module!="undefined"?module.exports=s():typeof define=="function"&&define.amd?define(s):(l=typeof globalThis!="undefined"?globalThis:l||self,l["create-poster"]=s())})(this,function(){"use strict";class l{constructor(t,i){_(this,"_canvas");_(this,"_ctx");_(this,"_config");_(this,"_ratio",1);_(this,"_eventTarget");this._canvas=t,this._config=i,this._ctx=this._canvas.getContext("2d",{alpha:!1}),this._ratio=i.ratio,this._eventTarget=Object.create({}),i.onClick&&this._listener(i.onClick),i.target&&this._addTargets(i.target),this._setCanvas()}_setCanvas(){let t=window.devicePixelRatio||1;this._config&&(this._canvas.width=Math.floor(this._config.width*t),this._canvas.height=Math.floor(this._config.height*t*this._ratio),this._ctx.scale(t,t)),this._ctx.font="24px sans-serif",this._ctx.fillStyle="#000",this._ctx.textAlign="center",this._ctx.textBaseline="middle"}_addTargets(t){if(!(!t||Object.keys(t).length<=0))for(let i in t){let e={x:t[i].x*this._ratio,y:t[i].y*this._ratio,width:t[i].width*this._ratio,height:t[i].height*this._ratio,left:(t[i].x+t[i].width)*this._ratio,top:(t[i].y+t[i].height)*this._ratio};this._eventTarget[i]=e}}_isInTargets(t,i){let e=!1,h=null;for(let o in this._eventTarget){let c=this._eventTarget[o];if(t>=c.x&&t<=c.left&&i>=c.y&&i<=c.top){e=!0,h=o;break}}return{isIn:e,t:h}}_listener(t){this._canvas.addEventListener("click",i=>{let e=this._isInTargets(i.offsetX,i.offsetY),h={x:i.offsetX,y:i.offsetY};i.$position=h,i.$target=e,t(i)})}async draw(t){let i=t.length;for(let e=0;e<i;e++){if(t[e].type==="text"){this.drawText(t[e]);continue}if(t[e].type==="image"){if(t[e].source instanceof Image){this.drawImage(t[e]);continue}if(typeof t[e].type=="string"){let h=await this.createImage(t[e].source);t[e].source=h,this.drawImage(t[e])}}}}async drawText(t){return new Promise(i=>{if(t.font&&(this._ctx.font=t.font),t.color&&(this._ctx.fillStyle=t.color),t.textAlign&&(console.log(t.textAlign),this._ctx.textAlign=t.textAlign),!t.maxWidth){this._ctx.fillText(t.source,t.x,t.y);return}let e=t.maxWidth||200,h=t.totalLine||1,o=t.lineHeight||24,c=t.x||0,u=t.y||0,a=t.source.split(""),r=[],f=[];for(let n=0;n<a.length;n++){const d=a[n];f.push(d);const x=f.join("");if(this._ctx.measureText(x).width>e){f.pop(),r.push(f.join("")),f=[d];continue}n===a.length-1&&r.push(x)}let g=r.length>h?h:r.length;for(let n=0;n<g;n++)n+1===g&&g!==1&&(r[n]=r[n]+"..."),this._ctx.fillText(r[n],c,u+n*o);i(r.length)})}async drawImage(t){return new Promise(()=>{t.borderRadius!==void 0&&this.creatBorderRect(Math.floor(t.x*this._ratio),Math.floor(t.y*this._ratio),Math.floor(t.source.width*this._ratio),Math.floor(t.source.height*this._ratio),Math.floor(t.borderRadius*this._ratio)),t.dx==null||t.dy==null||t.dWidth==null||t.dHeight==null?this._ctx.drawImage(t.source,Math.floor(t.x*this._ratio),Math.floor(t.y*this._ratio),Math.floor(t.source.width*this._ratio),Math.floor(t.source.height*this._ratio)):this._ctx.drawImage(t.source,t.dx*this._ratio,t.dy*this._ratio,t.dWidth*this._ratio,t.dHeight*this._ratio,t.x*this._ratio,t.y*this._ratio,t.source.width*this._ratio,t.source.height*this._ratio),this.restore()})}createImage(t){if(console.log(t),!Image){console.log("\u4E0D\u652F\u6301new Image(),\u4F20\u5165CanvasImageSource");return}let i=new Image;return i.src=t,i.referrerPolicy="no-referrer",new Promise((h,o)=>{i.onload=function(){h(i)},i.onerror=function(c){o(c)}})}creatBorderRect(t,i,e,h,o,c){[t,i,e,h,o]=[t*this._ratio,i*this._ratio,e*this._ratio,h*this._ratio,o*this._ratio],this._ctx.beginPath(),this._ctx.arc(t+o,i+o,o,Math.PI,1.5*Math.PI),this._ctx.moveTo(t+o,i),this._ctx.lineTo(t+e-o,i),this._ctx.lineTo(t+e,i+o),this._ctx.arc(t+e-o,i+o,o,1.5*Math.PI,2*Math.PI),this._ctx.lineTo(t+e,i+h-o),this._ctx.lineTo(t+e-o,i+h),this._ctx.arc(t+e-o,i+h-o,o,0,.5*Math.PI),this._ctx.lineTo(t+o,i+h),this._ctx.lineTo(t,i+h-o),this._ctx.arc(t+o,i+h-o,o,.5*Math.PI,Math.PI),this._ctx.lineTo(t,i+o),this._ctx.lineTo(t+o,i),this._ctx.fillStyle=c||"#5a5a5a",this._ctx.fill(),this._ctx.closePath(),this._ctx.save(),this._ctx.clip()}restore(){this._ctx.restore()}canvas2Image(){return this._canvas.toDataURL("image/png",1)}getCanvas(){return this._canvas}getCtx(){return this._ctx}}return l});
//# sourceMappingURL=create-poster.umd.js.map
